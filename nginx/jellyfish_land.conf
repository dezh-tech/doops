# Define upstreams
upstream jellyfish_immortal {
    server immortal:7777;
}

upstream jellyfish_kraken {
    server kraken:3000;
}

# Main domain handling
server {
    listen 443 ssl;
    server_name example.com;

    ssl_certificate /etc/ssl/certs/_.example.com.-cert.pem;
    ssl_certificate_key /etc/ssl/private/_.example.com.-privateKey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:!aNULL:!MD5:!RC4';
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    access_log /var/log/nginx/jellyfish_access.log;

    # Handle WebSocket requests
    location / {
        if ($http_accept = "application/nostr+json") {
            return 418;
        }

        if ($http_upgrade ~* "websocket") {
            return 419;
        }

        root /path/to/static/front;
        index index.html;
    }

    error_page 419 = @immortal;
    error_page 418 = @kraken;

    location @kraken {
        proxy_pass http://kraken;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }

    location @immortal {
        proxy_pass http://immortal;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 1800;
        proxy_send_timeout 1800;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Subdomain handling
server {
    listen 443 ssl;
    server_name api-manager.example.com;

    ssl_certificate /etc/ssl/certs/_.example.com.-cert.pem;
    ssl_certificate_key /etc/ssl/private/_.example.com.-privateKey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:!aNULL:!MD5:!RC4';
    ssl_prefer_server_ciphers on;

    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    access_log /var/log/nginx/manager_access.log;

    location / {
        proxy_pass http://kraken;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
    }
}